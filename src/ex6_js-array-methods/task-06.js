// ## –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6 üí™

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–∞–Ω–∞–ª–æ–≥ –º–µ—Ç–æ–¥–∞ reduce(array, callback, initialValue). 
// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é callback(previousValue, currentItem, i, array) –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ, 
// —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç previousValue. –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ - –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤—ë—Ä—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞. 
// –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç initialValue –µ—Å—Ç—å, —Ç–æ –Ω–∞ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏–µ previousValue –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ initialValue. –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ initialValue –Ω–µ—Ç, 
// —Ç–æ previousValue —Ä–∞–≤–Ω–æ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞, –∞ –ø–µ—Ä–µ–±–æ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ.

function reduce(array, callback, initialValue){
  let previousValue;
  let result;
  
  if (typeof initialValue === "undefined") {
    previousValue = array[0];
    for (var i = 1; i < array.length; i++){
        previousValue = callback(previousValue, array[i], i, array); 
    }

    return previousValue;
  } 
  
  if (typeof initialValue !== undefined) {
    previousValue = initialValue;
    for (var j = 0; j < array.length; j++){
        previousValue = callback(previousValue, array[j], j, array); 
    }

    return previousValue;
  }

  return previousValue;
}

module.exports = reduce;
